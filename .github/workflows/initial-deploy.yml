name: Initial create workflow

on:
  push:
  workflow_dispatch:

permissions: write-all

jobs:
  deploy:
    env:
      TF_CLOUD_ORGANIZATION: ${{ github.repository_owner }}
      TF_API_TOKEN: ${{ secrets.TFE_TOKEN }}
    name: "Build and Deploy"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: calver
          increment: patch

      - name: Lookup Project ID
        id: lookup_project_id
        run: |
            curl \
            --header "Authorization: Bearer ${{ secrets.TFE_TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request GET \
            --output project_output.txt \
            https://app.terraform.io/api/v2/organizations/${{ github.repository_owner }}/projects
            echo "project_id=$(jq -r --arg name '${{ vars.TFE_PROJECT }}' '.data[] | select(.attributes.name | test($name; "i")) | .id' project_output.txt)" >> $GITHUB_OUTPUT

      - name: Create workspace
        id: create_workspace_prod
        run: |
            cat > payload.json <<EOF
            {
              "data": {
                "attributes": {
                  "name": "${{ github.event.repository.name }}",
                  "auto-apply": "true"
                },
                "type": "workspaces",
                "relationships": {
                  "project": {
                    "data": {
                      "type": "projects",
                      "id": "${{ steps.lookup_project_id.outputs.project_id }}"
                    }
                  }
                }
              }
            }
            EOF
            curl \
            --header "Authorization: Bearer ${{ env.TF_API_TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data @payload.json \
            --output output.txt \
            https://app.terraform.io/api/v2/organizations/${{ github.repository_owner }}/workspaces
            echo "workspace_id=$(cat output.txt | jq -r '.[].id')" >> $GITHUB_OUTPUT 

      - name: Create workspace variables prod
        run: |
            cat > payload.json <<EOF
            {
              "data": {
                "type":"vars",
                "attributes": {
                  "key":"project_name",
                  "value":"${{ github.event.repository.name }}",
                  "description":"project name",
                  "category":"terraform",
                  "hcl":false,
                  "sensitive":false
                },
                "relationships": {
                  "workspace": {
                    "data": {
                      "id":"${{ steps.create_workspace_prod.outputs.workspace_id }}",
                      "type":"workspaces"
                    }
                  }
                }
              }
            }
            EOF
            curl \
            --header "Authorization: Bearer ${{ env.TF_API_TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data @payload.json \
            https://app.terraform.io/api/v2/vars
  
            cat > payload.json <<EOF
            {
              "data": {
                "type":"vars",
                "attributes": {
                  "key":"ENVIRONMENT",
                  "value":"prod",
                  "description":"environment",
                  "category":"terraform",
                  "hcl":false,
                  "sensitive":false
                },
                "relationships": {
                  "workspace": {
                    "data": {
                      "id":"${{ steps.create_workspace_prod.outputs.workspace_id }}",
                      "type":"workspaces"
                    }
                  }
                }
              }
            }
            EOF
            curl \
            --header "Authorization: Bearer ${{ env.TF_API_TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data @payload.json \
            https://app.terraform.io/api/v2/vars

      - uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.1.1
        id: upload_prod
        with:
            workspace: ${{ github.event.repository.name }}
            directory: .

# ────────────────────────────────────────────────
      # ⛓️ GHCR Build & Push Steps
      # ────────────────────────────────────────────────

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }} .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }}

      - name: Tag and Push 'latest' Docker image
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }} \
                     ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):latest
          docker push ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):latest

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.1.1
        id: apply-run-prod
        if: success() || failure()
        with:
            workspace: ${{ github.event.repository.name }}
            configuration_version: ${{ steps.upload_prod.outputs.configuration_version_id }}
            plan_only: false

      - name: Disable initial workflow
        run: |
          gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/workflows/initial-deploy.yml/disable
        env:
          GH_TOKEN: ${{ github.token }}