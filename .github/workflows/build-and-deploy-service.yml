name: Build and Deploy Services

on:
  push:
    branches: ["prod"]

permissions: write-all

jobs:
  deploy:
    env:
      TF_CLOUD_ORGANIZATION: ${{ github.repository_owner }}
      TF_API_TOKEN: ${{ secrets.TFE_TOKEN }}
    name: "Build and Deploy"
    runs-on: ubuntu-latest

    steps:
      - name: Check state of initial-deploy workflow
        id: check_state
        run: |
          echo "initial_deploy_state=$(gh api -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/workflows/initial-deploy.yml | jq -r '.state')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Checkout
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        uses: actions/checkout@v3

      - name: Get next version
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: calver
          increment: patch

      - uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.1.1
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        id: upload
        with:
          workspace: ${{ github.event.repository.name }}
          directory: .

      # ────────────────────────────────────────────────
      # ⛓️ GHCR Build & Push Steps
      # ────────────────────────────────────────────────

      - name: Log in to GHCR
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }} .

      - name: Push Docker image to GHCR
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }}

      - name: Tag and Push 'latest' Docker image
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):${{ steps.version.outputs.version }} \
                     ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):latest
          docker push ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }}):latest

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.1.1
        if: ${{ steps.check_state.outputs.initial_deploy_state == 'disabled_manually' }}
        id: apply-run
        with:
          workspace: ${{ github.event.repository.name }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: false